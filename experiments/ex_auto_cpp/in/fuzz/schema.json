{"types": [{"id": 1, "name": "Point"}, {"id": 2, "name": "Rect"}], "scopes": [{"name": "(auto) Point::Point(point_coord _x, point_coord _y);", "inputs": [], "outputs": [1], "context": 8}, {"name": "(auto) Point::void set(PointType _typ);", "inputs": [1], "outputs": [1], "context": 1}, {"name": "(auto) Point::void offset(point_coord _x, point_coord _y);", "inputs": [1], "outputs": [1], "context": 8}, {"name": "(auto) Point::Point MakeZero();", "inputs": [], "outputs": [1], "context": 0}, {"name": "(auto) Point::~Point();", "inputs": [1], "outputs": [], "context": 0}, {"name": "(auto) Rect::Rect();", "inputs": [], "outputs": [2], "context": 0}, {"name": "(auto) Rect::void setA(Point & p);", "inputs": [2, 1], "outputs": [2, 1], "context": 0}, {"name": "(auto) Rect::void setB(Point & p);", "inputs": [2, 1], "outputs": [2, 1], "context": 0}, {"name": "(auto) Rect::void setVal(float v);", "inputs": [2], "outputs": [2], "context": 4}, {"name": "(auto) Rect::int area();", "inputs": [2], "outputs": [2], "context": 0}, {"name": "(auto) Rect::void fuzzFunc(int z);", "inputs": [2], "outputs": [2], "context": 4}, {"name": "(auto) Rect::~Rect();", "inputs": [2], "outputs": [], "context": 0}]}