{"types": [{"id": 0, "name": "Eigen::MatrixXf"}, {"id": 1, "name": "Eigen::VectorXf"}], "scopes": [{"name": "set", "inputs": [0], "outputs": [0], "context": 12}, {"name": "(auto) Eigen::MatrixXf::Eigen::MatrixXf(int None, int None);", "inputs": [], "outputs": [0], "context": 8}, {"name": "(auto) Eigen::MatrixXf::void operator+=(Eigen::MatrixXf None);", "inputs": [0, 0], "outputs": [0, 0], "context": 0}, {"name": "(auto) Eigen::MatrixXf::void operator-=(Eigen::MatrixXf None);", "inputs": [0, 0], "outputs": [0, 0], "context": 0}, {"name": "(auto) Eigen::MatrixXf::void operator*=(float None);", "inputs": [0], "outputs": [0], "context": 4}, {"name": "(auto) Eigen::MatrixXf::void operator*=(Eigen::MatrixXf None);", "inputs": [0, 0], "outputs": [0, 0], "context": 0}, {"name": "(auto) Eigen::MatrixXf::void operator*=(Eigen::VectorXf None);", "inputs": [0, 1], "outputs": [0, 1], "context": 0}, {"name": "(auto) Eigen::MatrixXf::void operator/=(float None);", "inputs": [0], "outputs": [0], "context": 4}, {"name": "(auto) Eigen::MatrixXf::void resize(int None, int None);", "inputs": [0], "outputs": [0], "context": 8}, {"name": "(auto) Eigen::MatrixXf::void transpose();", "inputs": [0], "outputs": [0], "context": 0}, {"name": "(auto) Eigen::MatrixXf::void conjugate();", "inputs": [0], "outputs": [0], "context": 0}, {"name": "(auto) Eigen::MatrixXf::void adjoint();", "inputs": [0], "outputs": [0], "context": 0}, {"name": "(auto) Eigen::MatrixXf::void transposeInPlace();", "inputs": [0], "outputs": [0], "context": 0}, {"name": "(auto) Eigen::MatrixXf::float sum();", "inputs": [0], "outputs": [0], "context": 0}, {"name": "(auto) Eigen::MatrixXf::float prod();", "inputs": [0], "outputs": [0], "context": 0}, {"name": "(auto) Eigen::MatrixXf::float mean();", "inputs": [0], "outputs": [0], "context": 0}, {"name": "(auto) Eigen::MatrixXf::float minCoeff();", "inputs": [0], "outputs": [0], "context": 0}, {"name": "(auto) Eigen::MatrixXf::float maxCoeff();", "inputs": [0], "outputs": [0], "context": 0}, {"name": "(auto) Eigen::MatrixXf::float trace();", "inputs": [0], "outputs": [0], "context": 0}, {"name": "(auto) Eigen::MatrixXf::Eigen::MatrixXf Eigen::Matrix2f();", "inputs": [], "outputs": [0], "context": 0}, {"name": "(auto) Eigen::MatrixXf::Eigen::MatrixXf Eigen::Matrix3f();", "inputs": [], "outputs": [0], "context": 0}, {"name": "(auto) Eigen::MatrixXf::Eigen::MatrixXf Eigen::Matrix4f();", "inputs": [], "outputs": [0], "context": 0}, {"name": "(auto) Eigen::MatrixXf::~Eigen::MatrixXf();", "inputs": [0], "outputs": [], "context": 0}, {"name": "set", "inputs": [1], "outputs": [1], "context": 8}, {"name": "(auto) Eigen::VectorXf::Eigen::VectorXf(int None);", "inputs": [], "outputs": [1], "context": 4}, {"name": "(auto) Eigen::VectorXf::void operator+=(Eigen::VectorXf None);", "inputs": [1, 1], "outputs": [1, 1], "context": 0}, {"name": "(auto) Eigen::VectorXf::void operator-=(Eigen::VectorXf None);", "inputs": [1, 1], "outputs": [1, 1], "context": 0}, {"name": "(auto) Eigen::VectorXf::void operator*=(float None);", "inputs": [1], "outputs": [1], "context": 4}, {"name": "(auto) Eigen::VectorXf::void operator*=(Eigen::MatrixXf None);", "inputs": [1, 0], "outputs": [1, 0], "context": 0}, {"name": "(auto) Eigen::VectorXf::void operator*=(Eigen::VectorXf None);", "inputs": [1, 1], "outputs": [1, 1], "context": 0}, {"name": "(auto) Eigen::VectorXf::void operator/=(float None);", "inputs": [1], "outputs": [1], "context": 4}, {"name": "(auto) Eigen::VectorXf::void resize(int None);", "inputs": [1], "outputs": [1], "context": 4}, {"name": "(auto) Eigen::VectorXf::void transpose();", "inputs": [1], "outputs": [1], "context": 0}, {"name": "(auto) Eigen::VectorXf::float sum();", "inputs": [1], "outputs": [1], "context": 0}, {"name": "(auto) Eigen::VectorXf::float prod();", "inputs": [1], "outputs": [1], "context": 0}, {"name": "(auto) Eigen::VectorXf::float mean();", "inputs": [1], "outputs": [1], "context": 0}, {"name": "(auto) Eigen::VectorXf::float minCoeff();", "inputs": [1], "outputs": [1], "context": 0}, {"name": "(auto) Eigen::VectorXf::float maxCoeff();", "inputs": [1], "outputs": [1], "context": 0}, {"name": "(auto) Eigen::VectorXf::float trace();", "inputs": [1], "outputs": [1], "context": 0}, {"name": "(auto) Eigen::VectorXf::Eigen::VectorXf Eigen::Vector2f();", "inputs": [], "outputs": [1], "context": 0}, {"name": "(auto) Eigen::VectorXf::Eigen::VectorXf Eigen::Vector3f();", "inputs": [], "outputs": [1], "context": 0}, {"name": "(auto) Eigen::VectorXf::Eigen::VectorXf Eigen::Vector4f();", "inputs": [], "outputs": [1], "context": 0}, {"name": "(auto) Eigen::VectorXf::~Eigen::VectorXf();", "inputs": [1], "outputs": [], "context": 0}]}