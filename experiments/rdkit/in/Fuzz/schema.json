{"types": [{"id": 5, "name": "bundle<Conformer,ROMol>"}, {"id": 6, "name": "RDKit::ROMol"}, {"id": 7, "name": "bundle<Bond,RWMol>"}, {"id": 8, "name": "RDKit::RWMol"}, {"id": 9, "name": "RDKit::Atom"}, {"id": 10, "name": "RDKit::Bond"}, {"id": 11, "name": "RDKit::Conformer"}, {"id": 12, "name": "RDGeom::Point3D"}], "scopes": [{"name": "void setAtomBookmark(RDKit::Atom *at, int mark)", "inputs": [6, 9], "outputs": [6], "context": 4}, {"name": "void replaceAtomBookmark(RDKit::Atom *at, int mark)", "inputs": [6, 9], "outputs": [6], "context": 4}, {"name": "void setBondBookmark(RDKit::Bond *bond, int mark)", "inputs": [6, 10], "outputs": [6], "context": 4}, {"name": "RDKit::Conformer & getConformer(int id)", "inputs": [6], "outputs": [5], "context": 4}, {"name": "unbundle_conformer", "inputs": [5], "outputs": [6], "context": 0}, {"name": "unsigned int addConformer(RDKit::Conformer *conf, bool assignId)", "inputs": [6, 11], "outputs": [6], "context": 1}, {"name": "(auto) RDKit::ROMol::unsigned int getNumAtoms();", "inputs": [6], "outputs": [6], "context": 0}, {"name": "(auto) RDKit::ROMol::unsigned int getNumAtoms(bool onlyExplicit);", "inputs": [6], "outputs": [6], "context": 1}, {"name": "(auto) RDKit::ROMol::unsigned int getNumHeavyAtoms();", "inputs": [6], "outputs": [6], "context": 0}, {"name": "(auto) RDKit::ROMol::unsigned int getNumBonds(bool onlyHeavy);", "inputs": [6], "outputs": [6], "context": 1}, {"name": "(auto) RDKit::ROMol::void clearAtomBookmark(int mark);", "inputs": [6], "outputs": [6], "context": 4}, {"name": "(auto) RDKit::ROMol::void clearAtomBookmark(int mark, const RDKit::Atom * atom);", "inputs": [6, 9], "outputs": [6, 9], "context": 4}, {"name": "(auto) RDKit::ROMol::void clearAllAtomBookmarks();", "inputs": [6], "outputs": [6], "context": 0}, {"name": "(auto) RDKit::ROMol::bool hasAtomBookmark(int mark);", "inputs": [6], "outputs": [6], "context": 4}, {"name": "(auto) RDKit::ROMol::void clearBondBookmark(int mark);", "inputs": [6], "outputs": [6], "context": 4}, {"name": "(auto) RDKit::ROMol::void clearBondBookmark(int mark, const RDKit::Bond * bond);", "inputs": [6, 10], "outputs": [6, 10], "context": 4}, {"name": "(auto) RDKit::ROMol::void clearAllBondBookmarks();", "inputs": [6], "outputs": [6], "context": 0}, {"name": "(auto) RDKit::ROMol::bool hasBondBookmark(int mark);", "inputs": [6], "outputs": [6], "context": 4}, {"name": "(auto) RDKit::ROMol::void removeConformer(unsigned int id);", "inputs": [6], "outputs": [6], "context": 4}, {"name": "(auto) RDKit::ROMol::void clearConformers();", "inputs": [6], "outputs": [6], "context": 0}, {"name": "(auto) RDKit::ROMol::unsigned int getNumConformers();", "inputs": [6], "outputs": [6], "context": 0}, {"name": "(auto) RDKit::ROMol::void clearComputedProps(bool includeRings);", "inputs": [6], "outputs": [6], "context": 1}, {"name": "(auto) RDKit::ROMol::void updatePropertyCache(bool strict);", "inputs": [6], "outputs": [6], "context": 1}, {"name": "(auto) RDKit::ROMol::bool needsUpdatePropertyCache();", "inputs": [6], "outputs": [6], "context": 0}, {"name": "(auto) RDKit::ROMol::RDKit::ROMol();", "inputs": [], "outputs": [6], "context": 0}, {"name": "(auto) RDKit::ROMol::RDKit::ROMol(const RDKit::ROMol & other, bool quickCopy, int confId);", "inputs": [6], "outputs": [6, 6], "context": 5}, {"name": "(auto) RDKit::ROMol::~RDKit::ROMol();", "inputs": [6], "outputs": [], "context": 0}, {"name": "add_atom_copy", "inputs": [8, 9], "outputs": [8, 9], "context": 1}, {"name": "add_atom_owner", "inputs": [8, 9], "outputs": [8], "context": 1}, {"name": "add_bond_copy", "inputs": [8, 10], "outputs": [8, 10], "context": 0}, {"name": "add_bond_owner", "inputs": [8, 10], "outputs": [8], "context": 0}, {"name": "RDKit::Bond * createPartialBond(unsigned int beginAtomIdx, RDKit::Bond::BondType order)", "inputs": [8], "outputs": [7], "context": 5}, {"name": "unbundle_bond", "inputs": [7], "outputs": [8], "context": 0}, {"name": "RDKit::RWMol()", "inputs": [], "outputs": [8], "context": 0}, {"name": "destructor", "inputs": [8], "outputs": [], "context": 0}, {"name": "(auto) RDKit::RWMol::unsigned int addAtom(bool updateLabel);", "inputs": [8], "outputs": [8], "context": 1}, {"name": "(auto) RDKit::RWMol::void replaceAtom(unsigned int idx, RDKit::Atom * atom, bool updateLabel, bool preserveProps);", "inputs": [8, 9], "outputs": [8, 9], "context": 6}, {"name": "(auto) RDKit::RWMol::void setActiveAtom(RDKit::Atom * atom);", "inputs": [8, 9], "outputs": [8, 9], "context": 0}, {"name": "(auto) RDKit::RWMol::void setActiveAtom(unsigned int idx);", "inputs": [8], "outputs": [8], "context": 4}, {"name": "(auto) RDKit::RWMol::void removeAtom(unsigned int idx);", "inputs": [8], "outputs": [8], "context": 4}, {"name": "(auto) RDKit::RWMol::void removeAtom(RDKit::Atom * atom);", "inputs": [8, 9], "outputs": [8, 9], "context": 0}, {"name": "(auto) RDKit::RWMol::unsigned int addBond(unsigned int beginAtomIdx, unsigned int endAtomIdx, RDKit::Bond::BondType order);", "inputs": [8], "outputs": [8], "context": 9}, {"name": "(auto) RDKit::RWMol::unsigned int addBond(RDKit::Atom * beginAtom, RDKit::Atom * endAtom, RDKit::Bond::BondType order);", "inputs": [8, 9, 9], "outputs": [8, 9, 9], "context": 1}, {"name": "(auto) RDKit::RWMol::unsigned int finishPartialBond(unsigned int endAtomIdx, int bondBookmark, RDKit::Bond::BondType order);", "inputs": [8], "outputs": [8], "context": 9}, {"name": "(auto) RDKit::RWMol::void removeBond(unsigned int beginAtomIdx, unsigned int endAtomIdx);", "inputs": [8], "outputs": [8], "context": 8}, {"name": "(auto) RDKit::RWMol::void replaceBond(unsigned int idx, RDKit::Bond * bond, bool preserveProps);", "inputs": [8, 10], "outputs": [8, 10], "context": 5}, {"name": "(auto) RDKit::RWMol::void clear();", "inputs": [8], "outputs": [8], "context": 0}, {"name": "(auto) RDKit::RWMol::void beginBatchEdit();", "inputs": [8], "outputs": [8], "context": 0}, {"name": "(auto) RDKit::RWMol::void rollbackBatchEdit();", "inputs": [8], "outputs": [8], "context": 0}, {"name": "(auto) RDKit::RWMol::void commitBatchEdit();", "inputs": [8], "outputs": [8], "context": 0}, {"name": "(auto) RDKit::RWMol::void insertMol(const RDKit::ROMol & other);", "inputs": [8, 6], "outputs": [8, 6], "context": 0}, {"name": "RDKit::Atom & operator=(const RDKit::Atom &other)", "inputs": [9, 9], "outputs": [9, 9], "context": 0}, {"name": "RDKit::Atom * copy() const", "inputs": [9], "outputs": [9, 9], "context": 0}, {"name": "(auto) RDKit::Atom::RDKit::Atom();", "inputs": [], "outputs": [9], "context": 0}, {"name": "(auto) RDKit::Atom::RDKit::Atom(unsigned int num);", "inputs": [], "outputs": [9], "context": 4}, {"name": "(auto) RDKit::Atom::RDKit::Atom(const RDKit::Atom & other);", "inputs": [9], "outputs": [9, 9], "context": 0}, {"name": "(auto) RDKit::Atom::int getAtomicNum();", "inputs": [9], "outputs": [9], "context": 0}, {"name": "(auto) RDKit::Atom::void setAtomicNum(int newNum);", "inputs": [9], "outputs": [9], "context": 4}, {"name": "(auto) RDKit::Atom::bool hasOwningMol();", "inputs": [9], "outputs": [9], "context": 0}, {"name": "(auto) RDKit::Atom::void getOwningMol();", "inputs": [9], "outputs": [9], "context": 0}, {"name": "(auto) RDKit::Atom::unsigned int getIdx();", "inputs": [9], "outputs": [9], "context": 0}, {"name": "(auto) RDKit::Atom::void setIdx(unsigned int index);", "inputs": [9], "outputs": [9], "context": 4}, {"name": "(auto) RDKit::Atom::unsigned int getDegree();", "inputs": [9], "outputs": [9], "context": 0}, {"name": "(auto) RDKit::Atom::unsigned int getTotalDegree();", "inputs": [9], "outputs": [9], "context": 0}, {"name": "(auto) RDKit::Atom::unsigned int getTotalNumHs(bool includeNeighbors);", "inputs": [9], "outputs": [9], "context": 1}, {"name": "(auto) RDKit::Atom::unsigned int getTotalValence();", "inputs": [9], "outputs": [9], "context": 0}, {"name": "(auto) RDKit::Atom::unsigned int getNumImplicitHs();", "inputs": [9], "outputs": [9], "context": 0}, {"name": "(auto) RDKit::Atom::int getExplicitValence();", "inputs": [9], "outputs": [9], "context": 0}, {"name": "(auto) RDKit::Atom::int getImplicitValence();", "inputs": [9], "outputs": [9], "context": 0}, {"name": "(auto) RDKit::Atom::unsigned int getNumRadicalElectrons();", "inputs": [9], "outputs": [9], "context": 0}, {"name": "(auto) RDKit::Atom::void setNumRadicalElectrons(unsigned int num);", "inputs": [9], "outputs": [9], "context": 4}, {"name": "(auto) RDKit::Atom::int getFormalCharge();", "inputs": [9], "outputs": [9], "context": 0}, {"name": "(auto) RDKit::Atom::void setFormalCharge(int what);", "inputs": [9], "outputs": [9], "context": 4}, {"name": "(auto) RDKit::Atom::void setNoImplicit(bool what);", "inputs": [9], "outputs": [9], "context": 1}, {"name": "(auto) RDKit::Atom::bool getNoImplicit();", "inputs": [9], "outputs": [9], "context": 0}, {"name": "(auto) RDKit::Atom::void setNumExplicitHs(unsigned int what);", "inputs": [9], "outputs": [9], "context": 4}, {"name": "(auto) RDKit::Atom::unsigned int getNumExplicitHs();", "inputs": [9], "outputs": [9], "context": 0}, {"name": "(auto) RDKit::Atom::void setIsAromatic(bool what);", "inputs": [9], "outputs": [9], "context": 1}, {"name": "(auto) RDKit::Atom::bool getIsAromatic();", "inputs": [9], "outputs": [9], "context": 0}, {"name": "(auto) RDKit::Atom::void setIsotope(unsigned int what);", "inputs": [9], "outputs": [9], "context": 4}, {"name": "(auto) RDKit::Atom::unsigned int getIsotope();", "inputs": [9], "outputs": [9], "context": 0}, {"name": "(auto) RDKit::Atom::void setChiralTag(RDKit::Atom::ChiralType what);", "inputs": [9], "outputs": [9], "context": 1}, {"name": "(auto) RDKit::Atom::void invertChirality();", "inputs": [9], "outputs": [9], "context": 0}, {"name": "(auto) RDKit::Atom::RDKit::Atom::ChiralType getChiralTag();", "inputs": [9], "outputs": [9], "context": 0}, {"name": "(auto) RDKit::Atom::void setHybridization(RDKit::Atom::HybridizationType what);", "inputs": [9], "outputs": [9], "context": 1}, {"name": "(auto) RDKit::Atom::RDKit::Atom::HybridizationType getHybridization();", "inputs": [9], "outputs": [9], "context": 0}, {"name": "(auto) RDKit::Atom::bool hasQuery();", "inputs": [9], "outputs": [9], "context": 0}, {"name": "(auto) RDKit::Atom::bool Match(const RDKit::Atom * what);", "inputs": [9, 9], "outputs": [9, 9], "context": 0}, {"name": "(auto) RDKit::Atom::void updatePropertyCache(bool strict);", "inputs": [9], "outputs": [9], "context": 1}, {"name": "(auto) RDKit::Atom::bool needsUpdatePropertyCache();", "inputs": [9], "outputs": [9], "context": 0}, {"name": "(auto) RDKit::Atom::int calcExplicitValence(bool strict);", "inputs": [9], "outputs": [9], "context": 1}, {"name": "(auto) RDKit::Atom::int calcImplicitValence(bool strict);", "inputs": [9], "outputs": [9], "context": 1}, {"name": "(auto) RDKit::Atom::void setAtomMapNum(int mapno, bool strict);", "inputs": [9], "outputs": [9], "context": 5}, {"name": "(auto) RDKit::Atom::int getAtomMapNum();", "inputs": [9], "outputs": [9], "context": 0}, {"name": "(auto) RDKit::Atom::~RDKit::Atom();", "inputs": [9], "outputs": [], "context": 0}, {"name": "RDKit::Bond & operator=(const RDKit::Bond &other)", "inputs": [10, 10], "outputs": [10, 10], "context": 0}, {"name": "RDKit::Bond * copy() const", "inputs": [10], "outputs": [10, 10], "context": 0}, {"name": "void setOwningMol(RDKit::ROMol *other)", "inputs": [10, 6], "outputs": [6], "context": 0}, {"name": "void setOwningMol(RDKit::ROMol &other)", "inputs": [10, 6], "outputs": [6], "context": 0}, {"name": "(auto) RDKit::Bond::RDKit::Bond();", "inputs": [], "outputs": [10], "context": 0}, {"name": "(auto) RDKit::Bond::RDKit::Bond(RDKit::Bond::BondType bT);", "inputs": [], "outputs": [10], "context": 1}, {"name": "(auto) RDKit::Bond::RDKit::Bond(const RDKit::Bond & other);", "inputs": [10], "outputs": [10, 10], "context": 0}, {"name": "(auto) RDKit::Bond::RDKit::Bond::BondType getBondType();", "inputs": [10], "outputs": [10], "context": 0}, {"name": "(auto) RDKit::Bond::void setBondType(RDKit::Bond::BondType bT);", "inputs": [10], "outputs": [10], "context": 1}, {"name": "(auto) RDKit::Bond::void setIsAromatic(bool what);", "inputs": [10], "outputs": [10], "context": 1}, {"name": "(auto) RDKit::Bond::bool getIsAromatic();", "inputs": [10], "outputs": [10], "context": 0}, {"name": "(auto) RDKit::Bond::void setIsConjugated(bool what);", "inputs": [10], "outputs": [10], "context": 1}, {"name": "(auto) RDKit::Bond::bool getIsConjugated();", "inputs": [10], "outputs": [10], "context": 0}, {"name": "(auto) RDKit::Bond::bool hasOwningMol();", "inputs": [10], "outputs": [10], "context": 0}, {"name": "(auto) RDKit::Bond::void getOwningMol();", "inputs": [10], "outputs": [10], "context": 0}, {"name": "(auto) RDKit::Bond::unsigned int getIdx();", "inputs": [10], "outputs": [10], "context": 0}, {"name": "(auto) RDKit::Bond::void setIdx(unsigned int index);", "inputs": [10], "outputs": [10], "context": 4}, {"name": "(auto) RDKit::Bond::unsigned int getBeginAtomIdx();", "inputs": [10], "outputs": [10], "context": 0}, {"name": "(auto) RDKit::Bond::unsigned int getEndAtomIdx();", "inputs": [10], "outputs": [10], "context": 0}, {"name": "(auto) RDKit::Bond::unsigned int getOtherAtomIdx(unsigned int thisIdx);", "inputs": [10], "outputs": [10], "context": 4}, {"name": "(auto) RDKit::Bond::void setBeginAtomIdx(unsigned int what);", "inputs": [10], "outputs": [10], "context": 4}, {"name": "(auto) RDKit::Bond::void setEndAtomIdx(unsigned int what);", "inputs": [10], "outputs": [10], "context": 4}, {"name": "(auto) RDKit::Bond::void setBeginAtom(RDKit::Atom * at);", "inputs": [10, 9], "outputs": [10, 9], "context": 0}, {"name": "(auto) RDKit::Bond::void setEndAtom(RDKit::Atom * at);", "inputs": [10, 9], "outputs": [10, 9], "context": 0}, {"name": "(auto) RDKit::Bond::bool hasQuery();", "inputs": [10], "outputs": [10], "context": 0}, {"name": "(auto) RDKit::Bond::void setBondDir(RDKit::Bond::BondDir what);", "inputs": [10], "outputs": [10], "context": 1}, {"name": "(auto) RDKit::Bond::RDKit::Bond::BondDir getBondDir();", "inputs": [10], "outputs": [10], "context": 0}, {"name": "(auto) RDKit::Bond::void setStereo(RDKit::Bond::BondStereo what);", "inputs": [10], "outputs": [10], "context": 1}, {"name": "(auto) RDKit::Bond::RDKit::Bond::BondStereo getStereo();", "inputs": [10], "outputs": [10], "context": 0}, {"name": "(auto) RDKit::Bond::void setStereoAtoms(unsigned int bgnIdx, unsigned int endIdx);", "inputs": [10], "outputs": [10], "context": 8}, {"name": "(auto) RDKit::Bond::void updatePropertyCache(bool strict);", "inputs": [10], "outputs": [10], "context": 1}, {"name": "(auto) RDKit::Bond::~RDKit::Bond();", "inputs": [10], "outputs": [], "context": 0}, {"name": "RDKit::Conformer & operator=(const RDKit::Conformer &other)", "inputs": [11, 11], "outputs": [11, 11], "context": 0}, {"name": "(auto) RDKit::Conformer::RDKit::Conformer();", "inputs": [], "outputs": [11], "context": 0}, {"name": "(auto) RDKit::Conformer::RDKit::Conformer(unsigned int numAtoms);", "inputs": [], "outputs": [11], "context": 4}, {"name": "(auto) RDKit::Conformer::RDKit::Conformer(const RDKit::Conformer & other);", "inputs": [11], "outputs": [11, 11], "context": 0}, {"name": "(auto) RDKit::Conformer::void resize(unsigned int size);", "inputs": [11], "outputs": [11], "context": 4}, {"name": "(auto) RDKit::Conformer::void reserve(unsigned int size);", "inputs": [11], "outputs": [11], "context": 4}, {"name": "(auto) RDKit::Conformer::bool hasOwningMol();", "inputs": [11], "outputs": [11], "context": 0}, {"name": "(auto) RDKit::Conformer::void getAtomPos(unsigned int atomId);", "inputs": [11], "outputs": [11], "context": 4}, {"name": "(auto) RDKit::Conformer::void setAtomPos(unsigned int atomId, const RDGeom::Point3D & position);", "inputs": [11, 12], "outputs": [11, 12], "context": 4}, {"name": "(auto) RDKit::Conformer::unsigned int getId();", "inputs": [11], "outputs": [11], "context": 0}, {"name": "(auto) RDKit::Conformer::void setId(unsigned int id);", "inputs": [11], "outputs": [11], "context": 4}, {"name": "(auto) RDKit::Conformer::unsigned int getNumAtoms();", "inputs": [11], "outputs": [11], "context": 0}, {"name": "(auto) RDKit::Conformer::bool is3D();", "inputs": [11], "outputs": [11], "context": 0}, {"name": "(auto) RDKit::Conformer::void set3D(bool v);", "inputs": [11], "outputs": [11], "context": 1}, {"name": "(auto) RDKit::Conformer::~RDKit::Conformer();", "inputs": [11], "outputs": [], "context": 0}, {"name": "(auto) RDGeom::Point3D::RDGeom::Point3D();", "inputs": [], "outputs": [12], "context": 0}, {"name": "(auto) RDGeom::Point3D::RDGeom::Point3D(const RDGeom::Point3D & other);", "inputs": [12], "outputs": [12, 12], "context": 0}, {"name": "(auto) RDGeom::Point3D::unsigned int dimension();", "inputs": [12], "outputs": [12], "context": 0}, {"name": "(auto) RDGeom::Point3D::void normalize();", "inputs": [12], "outputs": [12], "context": 0}, {"name": "(auto) RDGeom::Point3D::~RDGeom::Point3D();", "inputs": [12], "outputs": [], "context": 0}, {"name": "bundled_(auto) RDKit::Conformer::void resize(unsigned int size);", "inputs": [5], "outputs": [5], "context": 4}, {"name": "bundled_(auto) RDKit::Conformer::void reserve(unsigned int size);", "inputs": [5], "outputs": [5], "context": 4}, {"name": "bundled_(auto) RDKit::Conformer::bool hasOwningMol();", "inputs": [5], "outputs": [5], "context": 0}, {"name": "bundled_(auto) RDKit::Conformer::void getAtomPos(unsigned int atomId);", "inputs": [5], "outputs": [5], "context": 4}, {"name": "bundled_(auto) RDKit::Conformer::void setAtomPos(unsigned int atomId, const RDGeom::Point3D & position);", "inputs": [5, 12], "outputs": [5, 12], "context": 4}, {"name": "bundled_(auto) RDKit::Conformer::unsigned int getId();", "inputs": [5], "outputs": [5], "context": 0}, {"name": "bundled_(auto) RDKit::Conformer::void setId(unsigned int id);", "inputs": [5], "outputs": [5], "context": 4}, {"name": "bundled_(auto) RDKit::Conformer::unsigned int getNumAtoms();", "inputs": [5], "outputs": [5], "context": 0}, {"name": "bundled_(auto) RDKit::Conformer::bool is3D();", "inputs": [5], "outputs": [5], "context": 0}, {"name": "bundled_(auto) RDKit::Conformer::void set3D(bool v);", "inputs": [5], "outputs": [5], "context": 1}, {"name": "bundled_(auto) RDKit::ROMol::void clearBondBookmark(int mark, const RDKit::Bond * bond);", "inputs": [6, 7], "outputs": [6, 7], "context": 4}, {"name": "bundled_add_bond_copy", "inputs": [8, 7], "outputs": [8, 7], "context": 0}, {"name": "bundled_(auto) RDKit::RWMol::void replaceBond(unsigned int idx, RDKit::Bond * bond, bool preserveProps);", "inputs": [8, 7], "outputs": [8, 7], "context": 5}, {"name": "bundled_(auto) RDKit::Bond::RDKit::Bond::BondType getBondType();", "inputs": [7], "outputs": [7], "context": 0}, {"name": "bundled_(auto) RDKit::Bond::void setBondType(RDKit::Bond::BondType bT);", "inputs": [7], "outputs": [7], "context": 1}, {"name": "bundled_(auto) RDKit::Bond::void setIsAromatic(bool what);", "inputs": [7], "outputs": [7], "context": 1}, {"name": "bundled_(auto) RDKit::Bond::bool getIsAromatic();", "inputs": [7], "outputs": [7], "context": 0}, {"name": "bundled_(auto) RDKit::Bond::void setIsConjugated(bool what);", "inputs": [7], "outputs": [7], "context": 1}, {"name": "bundled_(auto) RDKit::Bond::bool getIsConjugated();", "inputs": [7], "outputs": [7], "context": 0}, {"name": "bundled_(auto) RDKit::Bond::bool hasOwningMol();", "inputs": [7], "outputs": [7], "context": 0}, {"name": "bundled_(auto) RDKit::Bond::void getOwningMol();", "inputs": [7], "outputs": [7], "context": 0}, {"name": "bundled_(auto) RDKit::Bond::unsigned int getIdx();", "inputs": [7], "outputs": [7], "context": 0}, {"name": "bundled_(auto) RDKit::Bond::void setIdx(unsigned int index);", "inputs": [7], "outputs": [7], "context": 4}, {"name": "bundled_(auto) RDKit::Bond::unsigned int getBeginAtomIdx();", "inputs": [7], "outputs": [7], "context": 0}, {"name": "bundled_(auto) RDKit::Bond::unsigned int getEndAtomIdx();", "inputs": [7], "outputs": [7], "context": 0}, {"name": "bundled_(auto) RDKit::Bond::unsigned int getOtherAtomIdx(unsigned int thisIdx);", "inputs": [7], "outputs": [7], "context": 4}, {"name": "bundled_(auto) RDKit::Bond::void setBeginAtomIdx(unsigned int what);", "inputs": [7], "outputs": [7], "context": 4}, {"name": "bundled_(auto) RDKit::Bond::void setEndAtomIdx(unsigned int what);", "inputs": [7], "outputs": [7], "context": 4}, {"name": "bundled_(auto) RDKit::Bond::void setBeginAtom(RDKit::Atom * at);", "inputs": [7, 9], "outputs": [7, 9], "context": 0}, {"name": "bundled_(auto) RDKit::Bond::void setEndAtom(RDKit::Atom * at);", "inputs": [7, 9], "outputs": [7, 9], "context": 0}, {"name": "bundled_(auto) RDKit::Bond::bool hasQuery();", "inputs": [7], "outputs": [7], "context": 0}, {"name": "bundled_(auto) RDKit::Bond::void setBondDir(RDKit::Bond::BondDir what);", "inputs": [7], "outputs": [7], "context": 1}, {"name": "bundled_(auto) RDKit::Bond::RDKit::Bond::BondDir getBondDir();", "inputs": [7], "outputs": [7], "context": 0}, {"name": "bundled_(auto) RDKit::Bond::void setStereo(RDKit::Bond::BondStereo what);", "inputs": [7], "outputs": [7], "context": 1}, {"name": "bundled_(auto) RDKit::Bond::RDKit::Bond::BondStereo getStereo();", "inputs": [7], "outputs": [7], "context": 0}, {"name": "bundled_(auto) RDKit::Bond::void setStereoAtoms(unsigned int bgnIdx, unsigned int endIdx);", "inputs": [7], "outputs": [7], "context": 8}, {"name": "bundled_(auto) RDKit::Bond::void updatePropertyCache(bool strict);", "inputs": [7], "outputs": [7], "context": 1}]}